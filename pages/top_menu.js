import Head from "next/head";
import { useState, useEffect } from "react";
import { useRouter } from "next/router";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";

// import jwt from "jsonwebtoken";
// import Link from "next/link";

// import Image from "next/image";
// import { Top } from "@/components/top";
// import { Sign } from "@/components/Sign";

const inter = Inter({ subsets: ["latin"] });
// const secret_key = "tastingcoffee";
export default function Home() {
  // // モーダルの表示・非表示を表すstate
  // const [showModal, setShowModal] = useState(false);
  // // routerオブジェクトを取得する
  // const router = useRouter();
  // // ページ遷移時に発火するイベントを定義する
  // const handleRouteChange = (url) => {
  //   // モーダルを表示する
  //   setShowModal(true);
  //   // 遷移先のURLを保存する
  //   setNextUrl(url);
  // };
  // // モーダルのOKボタンが押されたときの処理
  // const handleOk = () => {
  //   // モーダルを非表示にする
  //   setShowModal(false);
  //   // 遷移先のURLに移動する
  //   router.push(nextUrl);
  // };
  // // モーダルのキャンセルボタンが押されたときの処理
  // const handleCancel = () => {
  //   // モーダルを非表示にする
  //   setShowModal(false);
  //   // 遷移を中止する
  //   router.events.emit("routeChangeError");
  // };

  // // コンポーネントがマウントされたときにイベントを登録する
  // useEffect(() => {
  //   router.events.on("routeChangeStart", handleRouteChange);
  //   return () => {
  //     router.events.off("routeChangeStart", handleRouteChange);
  //   };
  // }, []);
  return (
    <>
      <Head>
        <title>Tasting Note</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.container}>
        <main className={styles.main}>
          <div className={styles.main_contents}>
            {" "}
            <div className={styles.top}>
              <h1 className={styles.title}>Tasting Note</h1>
              <nav className={styles.top_nav}>
                <ul className={styles.top_nav_list}>
                  <li className={styles.top_nav_item}>
                    {/* ログイン認証ページ */}
                    <button>START</button>
                  </li>
                  {/*アカウント登録ページ  */}
                  <li className={styles.top_nav_item}>
                    <button>Sing Up </button>
                  </li>
                </ul>
                <div>
                  {/* モーダルが表示されているときだけ、モーダルの内容を表示する
                  {showModal && (
                    <div className="modal">
                      <p>ページ遷移しますか？</p>
                      <button onClick={handleOk}>OK</button>
                      <button onClick={handleCancel}>キャンセル</button>
                    </div>
                  )} */}
                </div>
              </nav>
            </div>
          </div>
        </main>
      </div>
    </>
  );
}
Home();
